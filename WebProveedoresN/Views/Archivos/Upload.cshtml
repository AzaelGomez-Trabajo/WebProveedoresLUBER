@model WebProveedoresN.Models.LoadFileDTO
@{
    ViewBag.Title = "Subir Archivos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.NombreEmpresa == null)
{
    <div class="alert alert-warning">
        No se ha proporcionado el proveedor.
    </div>
}
else
{
    <div class="alert alert-info">
        @Html.Encode(@ViewBag.NombreEmpresa)
    </div>


    using (Html.BeginForm("Upload", "Archivos", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.OrderNumber)
        <div class="row justify-content-center mt-5">
            <div class="col-5">
                <div class="card">
                    <div class="card-header">
                        <h3 class="text-center">
                            Subir Factura para la Orden de Compra @if (ViewBag.OrderNumber != null)
                            {
                                @Html.Encode(@ViewBag.OrderNumber)
                            }
                        </h3>
                    </div>
                    <div class="card-body">

                        <div class="form-group">
                            @Html.LabelFor(model => model.FilePDF, htmlAttributes: new { @class = "control-label" })
                            <input type="file" id="pdfFile" name="FilePDF" class="form-control" accept=".pdf" />
                            @Html.ValidationMessageFor(model => model.FilePDF, "", new { @class = "text-danger" })
                            <p id="pdfFileName" class="text-info"></p>
                        </div>
                        <br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.FileXML, htmlAttributes: new { @class = "control-label" })
                            <input type="file" id="xmlFile" name="FileXML" class="form-control" accept=".xml" />
                            @Html.ValidationMessageFor(model => model.FileXML, "", new { @class = "text-danger" })
                            <p id="xmlFileName" class="text-info"></p>
                            <pre id="xmlFileContent" class="text-info"></pre>
                        </div>

                        <div class="form-group" style="text-align:center">
                        </div>

                        @if (ViewBag.Message != null)
                        {
                            <div class="alert alert-danger" role="alert">
                                @ViewBag.Message
                            </div>
                        }

                        <div class="mb-3" style="text-align:center">
                            <div class="d-grid">
                                <input type="submit" value="Guardar" class="btn btn-outline-primary" />
                            </div>
                        </div>
                        <div id="progressBar" class="progress" style="display:none;">
                            <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    <script>
        document.getElementById('pdfFile').addEventListener('change', function (event) {
                   var file = event.target.files[0];
                   if (file && file.name.endsWith('.pdf')) {
                       document.getElementById('pdfFileName').textContent = file.name;
                   } else {
                       alert('Por favor, sube solo archivos PDF.');
                       event.target.value = '';
                       document.getElementById('pdfFileName').textContent = '';
                   }
               });

               document.getElementById('xmlFile').addEventListener('change', function (event) {
                   var file = event.target.files[0];
                   if (file && file.name.endsWith('.xml')) {
                       document.getElementById('xmlFileName').textContent = file.name;
                       var reader = new FileReader();
                       reader.onload = function (e) {
                           document.getElementById('xmlFileContent').textContent = e.target.result;
                       };
                       reader.readAsText(file);
                   } else {
                       alert('Por favor, sube solo archivos XML.');
                       event.target.value = '';
                       document.getElementById('xmlFileName').textContent = '';
                   }
               });

               document.querySelector('form').addEventListener('submit', function (event) {
                   var progressBar = document.getElementById('progressBar');
                   var progressBarInner = progressBar.querySelector('.progress-bar');
                   progressBar.style.display = 'block';

                   var formData = new FormData(this);
                   var xhr = new XMLHttpRequest();
                   xhr.open('POST', this.action, true);
                   xhr.upload.onprogress = function (e) {
                       if (e.lengthComputable) {
                           var percentComplete = (e.loaded / e.total) * 100;
                           progressBarInner.style.width = percentComplete + '%';
                           progressBarInner.setAttribute('aria-valuenow', percentComplete);
                       }
                   };
                   xhr.onload = function () {
                       if (xhr.status === 200) {
                           alert('Archivos subidos exitosamente.');
                           progressBar.style.display = 'none';
                       } else {
                           alert('Error al subir los archivos.');
                           progressBar.style.display = 'none';
                       }
                   };
                   xhr.send(formData);
                   event.preventDefault();
               });
    </script>
}
